// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE

import * as List from "bs-platform/lib/es6/list.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Belt_List from "bs-platform/lib/es6/belt_List.js";
import * as Belt_Array from "bs-platform/lib/es6/belt_Array.js";
import * as Caml_int32 from "bs-platform/lib/es6/caml_int32.js";
import * as ReasonUrql from "reason-urql/src/ReasonUrql.bs.js";
import * as Link$ReasonHn from "./Link.bs.js";
import * as Utils$ReasonHn from "../Utils.bs.js";
import * as ReasonReactRouter from "reason-react/src/ReasonReactRouter.js";
import * as LinkDecoded$ReasonHn from "./LinkDecoded.bs.js";

var feedQuery = "\n    query FeedQuery($first: Int, $skip: Int, $orderBy: LinkOrderByInput) {\n    feed(first: $first, skip: $skip, orderBy: $orderBy) {\n      count\n      links {\n        id\n        createdAt\n        url\n        description\n        postedBy {\n          id\n          name\n        }\n        votes {\n          id\n          user {\n            id\n          }\n        }\n      }\n    }}\n";

function LinkListNew(Props) {
  var match = Props.path;
  var path = match !== undefined ? match : ReasonReactRouter.useUrl(undefined, /* () */0)[/* path */0];
  console.log("path", path);
  console.log("parseInt", Utils$ReasonHn.$$parseInt(List.nth(path, 1)));
  console.log("pageWithArg", Utils$ReasonHn.$$parseInt(List.nth(path, 1)));
  var isNewPage = Belt_List.has(path, "new", (function (prim, prim$1) {
          return prim === prim$1;
        })) === true;
  console.log("isNewPage", isNewPage);
  var skip = isNewPage ? Caml_int32.imul(Utils$ReasonHn.$$parseInt(List.nth(path, 1)) - 1 | 0, 10) : 0;
  console.log("skip", skip);
  var first = isNewPage ? 10 : 100;
  console.log("first", first);
  var orderBy = isNewPage ? "createdAt_DESC" : "";
  console.log("orderBy", orderBy);
  var payload = React.useMemo((function () {
          var variables = { };
          variables["skip"] = skip;
          variables["first"] = first;
          variables["orderBy"] = orderBy;
          return variables;
        }), /* array */[path]);
  console.log("payload", payload);
  console.log("feedQuery", feedQuery);
  var match$1 = Curry._4(ReasonUrql.Hooks[/* useQuery */1], {
        query: feedQuery,
        variables: payload,
        parse: (function (x) {
            return x;
          })
      }, undefined, undefined, /* () */0);
  var response = match$1[0][/* response */3];
  if (typeof response === "number") {
    if (response === 0) {
      return React.createElement("div", undefined, "Loading");
    } else {
      return React.createElement("div", undefined, "Not Found");
    }
  } else if (response.tag) {
    var match$2 = response[0][/* networkError */0];
    if (match$2 !== undefined) {
      return React.createElement("div", undefined, "Network Error");
    } else {
      return React.createElement("div", undefined, "No Network Error");
    }
  } else {
    var data = response[0];
    console.log("DATA", data);
    var links = LinkDecoded$ReasonHn.decodeFeed(data);
    console.log("LINKS", links);
    var links$1 = Belt_Array.mapWithIndex(links, (function (index, link) {
            return React.createElement(Link$ReasonHn.make, {
                        link: link,
                        index: index,
                        key: link[/* id */0]
                      });
          }));
    return React.createElement("div", undefined, links$1);
  }
}

var make = LinkListNew;

export {
  feedQuery ,
  make ,
  
}
/* react Not a pure module */
