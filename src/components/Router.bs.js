// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE

import * as Login from "./Login.bs.js";
import * as React from "react";
import * as Header from "./Header.bs.js";
import * as Search from "./Search.bs.js";
import * as SignUp from "./SignUp.bs.js";
import * as LinkList from "./LinkList.bs.js";
import * as CreateLink from "./CreateLink.bs.js";
import * as ReasonReactRouter from "reason-react/src/ReasonReactRouter.js";
import * as Caml_chrome_debugger from "bs-platform/lib/es6/caml_chrome_debugger.js";

((require('../styles/App.css')));

function parseUrl(url) {
  var match = url[/* path */0];
  if (match) {
    switch (match[0]) {
      case "/" : 
          if (match[1]) {
            return /* NotFound */4;
          } else {
            return /* LinkList */Caml_chrome_debugger.simpleVariant("LinkList", [undefined]);
          }
      case "create" : 
          if (match[1]) {
            return /* NotFound */4;
          } else {
            return /* CreateLink */0;
          }
      case "login" : 
          if (match[1]) {
            return /* NotFound */4;
          } else {
            return /* Login */2;
          }
      case "new" : 
          var match$1 = match[1];
          if (match$1 && !match$1[1]) {
            return /* LinkList */Caml_chrome_debugger.simpleVariant("LinkList", [match$1[0]]);
          } else {
            return /* NotFound */4;
          }
      case "search" : 
          if (match[1]) {
            return /* NotFound */4;
          } else {
            return /* Search */3;
          }
      case "signup" : 
          if (match[1]) {
            return /* NotFound */4;
          } else {
            return /* SignUp */1;
          }
      default:
        return /* NotFound */4;
    }
  } else {
    return /* LinkList */Caml_chrome_debugger.simpleVariant("LinkList", [undefined]);
  }
}

function Router(Props) {
  var url = ReasonReactRouter.useUrl(undefined, /* () */0);
  var route = parseUrl(url);
  var nowShowing;
  if (typeof route === "number") {
    switch (route) {
      case 0 : 
          nowShowing = React.createElement(CreateLink.make, { });
          break;
      case 1 : 
          nowShowing = React.createElement(SignUp.make, { });
          break;
      case 2 : 
          nowShowing = React.createElement(Login.make, { });
          break;
      case 3 : 
          nowShowing = React.createElement(Search.make, { });
          break;
      case 4 : 
          nowShowing = "NotFound";
          break;
      
    }
  } else {
    var match = route[0];
    nowShowing = match !== undefined ? (
        match === "1" ? React.createElement(LinkList.make, { }) : "NotFound"
      ) : React.createElement(LinkList.make, { });
  }
  return React.createElement("div", {
              className: "center w85"
            }, React.createElement(Header.make, { }), React.createElement("div", {
                  className: "ph3 pv1 background-gray"
                }, nowShowing));
}

var make = Router;

export {
  parseUrl ,
  make ,
  
}
/*  Not a pure module */
